= Minidump (MDMP) format
Analysis the Windows Minidump format

:toc:
:toclevels: 4

:numbered!:
[abstract]
== Summary
[yellow-background]*TODO: add text*

This document is intended as a working document for the Minidump (MDPM) format. 
Which should allow existing Open Source forensic tooling to be able to process 
this type of volume format.

[preface]
== Document information
[cols="1,5"]
|===
| Author(s): | Joachim Metz <joachim.metz@gmail.com>
| Abstract: | This document contains information about the Minidump (MDPM) format
| Classification: | Public
| Keywords: | Minidump, MDPM
|===

[preface]
== License
....
Copyright (C) 2014-2015, Joachim Metz <joachim.metz@gmail.com>.
Permission is granted to copy, distribute and/or modify this document under the 
terms of the GNU Free Documentation License, Version 1.3 or any later version 
published by the Free Software Foundation; with no Invariant Sections, no 
Front-Cover Texts, and no Back-Cover Texts. A copy of the license is included 
in the section entitled "GNU Free Documentation License".
....

[preface]
== Revision history
[cols="1,1,1,5",options="header"]
|===
| Version | Author | Date | Comments
| 0.0.1 | J.B. Metz | March 2014 | Initial version.
| 0.0.2 | J.B. Metz | November 2015 | Switched to asccidoc format.
|===

:numbered:
== Overview
[yellow-background]*TODO: add text*

Minidump file:

* File header
* Streams directory
* Streams and other data

[cols="1,5",options="header"]
|===
| Characteristics | Description
| Byte order | little-endian
| Date and time values | POSIX timestamp in UTC +
Number of seconds since Jan 1, 1970 00:00:00 UTC
| Character strings | ASCII strings are Single Byte Character (SBC) or Multi Byte Character (MBC) string stored with a codepage. Sometimes referred to as ANSI string representation. +
Though technically maybe incorrect, this document will use term (extended) ASCII string. +
Unicode strings are stored in UTF-16 little-endian without the byte order mark (BOM).
|===

=== Test version
The following version of programs were used to test the information within this 
document:

* Windows 7

[yellow-background]*TODO: check more versions of Windows*

== File header
The file header (MINIDUMP_HEADER) is 32 bytes of size and consists of:

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 4 | "MDMP" | Signature (MINIDUMP_SIGNATURE)
| 4 | 2 | 0xa793 | Format version (MINIDUMP_VERSION)
| 6 | 2 | | Implementation specific version
| 8 | 4 | | Number of streams
| 12 | 4 | | Streams directory RVA +
Contains an offset relative to the start of the file
| 16 | 4 | | Checksum +
[yellow-background]*(Which type of checksum? What data does it check?)* +
[yellow-background]*0 if not set*
4+| _Unknown criteria_
| 20 | 4 | 0 | [yellow-background]*Unknown (reserved)*
4+| _Unknown criteria_
| 20 | 4 | | Timestamp +
[yellow-background]*What purpose does the timestamp have?* +
Contains a POSIX timestamp
4+| _Common_
| 24 | 8 | | File flags +
See section: <<file_flags,File flags>>
|===

=== Format version

[cols="1,5",options="header"]
|===
| Implementation version
| Description
| 0x61b0 +
0x61b1 | Used on Windows 7 +
[yellow-background]*32-bit location descriptors?*
|===

=== [[file_flags]]File flags
The file flags (MINIDUMP_TYPE) are defined as:

[yellow-background]*TODO: clean up descriptions*

[cols="1,1,5",options="header"]
|===
| Value | Identifier | Description
| 0x00000000 | MiniDumpNormal | Include just the information necessary to capture stack traces for all existing threads in a process.
| 0x00000001 | MiniDumpWithDataSegs | Include the data sections from all loaded modules. This results in the inclusion of global variables, which can make the minidump file significantly larger. For per-module control, use the ModuleWriteDataSeg enumeration value from MODULE_WRITE_FLAGS.
| 0x00000002 | MiniDumpWithFullMemory | Include all accessible memory in the process. The raw memory data is included at the end, so that the initial structures can be mapped directly without the raw memory information. This option can result in a very large file.
| 0x00000004 | MiniDumpWithHandleData | Include high-level information about the operating system handles that are active when the minidump is made.
| 0x00000008 | MiniDumpFilterMemory | Stack and backing store memory written to the minidump file should be filtered to remove all but the pointer values necessary to reconstruct a stack trace.
| 0x00000010 | MiniDumpScanMemory | Stack and backing store memory should be scanned for pointer references to modules in the module list. If a module is referenced by stack or backing store memory, the ModuleWriteFlags member of the MINIDUMP_CALLBACK_OUTPUT structure is set to ModuleReferencedByMemory.
3+| _Values not supported in DbgHelp 5.1_
| 0x00000020 | MiniDumpWithUnloadedModules | Include information from the list of modules that were recently unloaded, if this information is maintained by the operating system.
| Windows Server 2003 and Windows XP:  The operating system does not maintain information for unloaded modules until Windows Server 2003 with SP1 and Windows XP with SP2.
| 0x00000040 | MiniDumpWithIndirectlyReferencedMemory | Include pages with data referenced by locals or other stack memory. This option can increase the size of the minidump file significantly.
| 0x00000080 | MiniDumpFilterModulePaths | Filter module paths for information such as user names or important directories. This option may prevent the system from locating the image file and should be used only in special situations.
| 0x00000100 | MiniDumpWithProcessThreadData | Include complete per-process and per-thread information from the operating system.
| 0x00000200 | MiniDumpWithPrivateReadWriteMemory | Scan the virtual address space for PAGE_READWRITE memory to be included.
3+| _Values not supported in DbgHelp 6.1 and earlier_
| 0x00000400 | MiniDumpWithoutOptionalData | Reduce the data that is dumped by eliminating memory regions that are not essential to meet criteria specified for the dump. This can avoid dumping memory that may contain data that is private to the user. However, it is not a guarantee that no private information will be present.
| 0x00000800 | MiniDumpWithFullMemoryInfo | Include memory region information. For more information, see MINIDUMP_MEMORY_INFO_LIST.
| 0x00001000 | MiniDumpWithThreadInfo | Include thread state information. For more information, see MINIDUMP_THREAD_INFO_LIST.
| 0x00002000 | MiniDumpWithCodeSegs | Include all code and code-related sections from loaded modules to capture executable content. For per-module control, use the ModuleWriteCodeSegs enumeration value from MODULE_WRITE_FLAGS.
3+| _Common_
| 0x00004000 | MiniDumpWithoutAuxiliaryState | Turns off secondary auxiliary-supported memory gathering.
| 0x00008000 | MiniDumpWithFullAuxiliaryState | Requests that auxiliary data providers include their state in the dump image; the state data that is included is provider dependent. This option can result in a large dump image.
| 0x00010000 | MiniDumpWithPrivateWriteCopyMemory | Scans the virtual address space for PAGE_WRITECOPY memory to be included.
3+| _Values not supported before DbgHelp 6.1_
| 0x00020000 | MiniDumpIgnoreInaccessibleMemory | If you specify MiniDumpWithFullMemory, the MiniDumpWriteDump function will fail if the function cannot read the memory regions; however, if you include MiniDumpIgnoreInaccessibleMemory, the MiniDumpWriteDump function will ignore the memory read failures and continue to generate the dump. Note that the inaccessible memory regions are not included in the dump.
| 0x00040000 | MiniDumpWithTokenInformation | Adds security token related data. This will make the "!token" extension work when processing a user-mode dump.
| 0x00080000 | MiniDumpWithModuleHeaders | Adds module header related data.
| 0x00100000 | MiniDumpFilterTriage | Adds filter triage related data.
3+| _Common_
| 0x001fffff | MiniDumpValidTypeFlags | Indicates which flags are valid.
|===

== Stream directory
The stream directory is an array of stream directory entries.

=== Stream directory entry
The stream directory entry (MINIDUMP_DIRECTORY) is X bytes of size and consist of:

[cols="1,1,5",options="header"]
|===
| Value | Identifier | Description
| 0 | 4 | | Stream type +
See section: <<stream_type,Stream type>>
| 4 | ... | | Location descriptor +
See section: <<location_descriptor,Location descriptor>>
|===

=== [[stream_type]]Stream type
The stream type (MINIDUMP_STREAM_TYPE) is defined as:

[cols="1,1,5",options="header"]
|===
| Value | Identifier | Description
| 0 | UnusedStream | Reserved +
According to MSDN this should not be used.
| 1 | ReservedStream0 | Reserved +
According to MSDN this should not be used.
| 2 | ReservedStream1 | Reserved +
According to MSDN this should not be used.
| 3 | ThreadListStream | The thread information stream +
See section: <<thread_information_stream,Thread information stream>>
| 4 | ModuleListStream | The module information stream +
See section: <<module_information_stream,Module information stream>>
| 5 | MemoryListStream | The memory allocation information stream +
See section: <<memory_allocation_information_stream_32bit,32-bit memory allocation information stream>>
| 6 | ExceptionStream | The exception information stream +
See section: <<exception_information_stream,Exception information stream>>
| 7 | SystemInfoStream | The general system information stream +
See section: <<general_system_information_stream,General system information stream>>
| 8 | ThreadExListStream | The extended thread information stream +
See section: <<extended_thread_information_stream,Extended thread information stream>>
| 9 | Memory64ListStream | The 64-bit memory allocation information stream +
See section: <<memory_allocation_information_stream_64bit,64-bit memory allocation information stream>>
| 10 | CommentStreamA | The ASCII comment stream +
This stream is used for documentation purposes
| 11 | CommentStreamW | The Unicode comment stream +
This stream is used for documentation purposes
| 12 | HandleDataStream | The active operating system handles stream +
See section: <<active_operating_system_handles_stream,Active operating system handles stream>>
| 13 | FunctionTableStream | The function table information stream +
See section: <<function_table_information_stream,Function table information stream>>
3+| _Introduced after DbgHelp 5.1_
| 14 | UnloadedModuleListStream | The unloaded module information stream +
See section: <<unloaded_module_information_stream,Unloaded module information stream>>
| 15 | MiscInfoStream | The miscellaneous information stream +
See section: <<miscellaneous_information_stream,Miscellaneous information stream>>
3+| _Introduced after DbgHelp 6.1_
| 16 | MemoryInfoListStream | The memory region description information stream +
It corresponds to the information that would be returned for the process from the VirtualQuery function +
See section: <<memory_region_description_information_stream,Memory region description information stream>>
| 17 | ThreadInfoListStream | The thread state information stream +
See section: <<thread_state_information_stream,Thread state information stream>>
3+| _Introduced after DbgHelp 6.4_
| 18 | HandleOperationListStream | The operation list information stream +
See section: <<operation_list_information_stream,Operation list information stream>>
| 19 | TokenStream | [yellow-background]*Unknown seen in Windows 7*
3+| _Common_
| 0xffff | LastReservedStream | [yellow-background]*Any value greater than this value will not be used by the system and can be used to represent application-defined data streams.* +
[yellow-background]*For more information, see MINIDUMP_USER_STREAM*
|===

== Common types
[yellow-background]*TODO: add missing text*

=== [[location_descriptor]]Location descriptor
[yellow-background]*This structure uses 32-bit locations for RVAs in the first 
4GB and 64-bit locations are used for larger RVAs.*

==== 32-bit location descriptor
The 32-bit location descriptor (MINIDUMP_LOCATION_DESCRIPTOR) is 8 bytes of 
size and consist of:

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 4 | | Data size
| 4 | 4 | | RVA +
Contains an offset relative to the start of the file
|===

==== 64-bit location descriptor
The 64-bit location descriptor (MINIDUMP_LOCATION_DESCRIPTOR64) is 16 bytes of 
size and consist of:

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 8 | | Data size
| 8 | 8 | | RVA +
Contains an offset relative to the start of the file
|===

=== String
[yellow-background]*TODO: add text (MINIDUMP_STRING)*

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 4 | | [yellow-background]*Length (number of characters or bytes)*
| 4 | ... | | String data +
Contain an [yellow-background]*UTF-16 little-endian string (with or without an end-of-string character)*
|===

== Streams
[yellow-background]*TODO: add missing text*

=== [[active_operating_system_handles_stream]]Active operating system handles stream
The active operating system handles information stream consists of:

* operating system handles information header
* array of operating system handle descriptors

The operating system handles header (MINIDUMP_HANDLE_DATA_STREAM) is 16 bytes 
of size and consists of:

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 4 | 16 | Header size +
Includes the header size value itself
| 4 | 4 | 32 or 40 | Descriptor size
| 8 | 4 | | Number of descriptors
| 12 | 4 | 0 | [yellow-background]*Unknown (Reserved)*
|===

The operating system handle descriptor - version 1 (MINIDUMP_HANDLE_DESCRIPTOR) 
or operating system handle descriptor - version 2 
(MINIDUMP_HANDLE_DESCRIPTOR_2) are respectively 32 or 40 bytes of size and 
consists of:

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 8 | | [yellow-background]*Unknown (Handle?)*
| 8 | 4 | | Type name RVA +
Contains an offset relative to the start of the file
| 12 | 4 | | Handle object name RVA +
Contains an offset relative to the start of the file
| 16 | 4 | | Attributes
| 20 | 4 | | [yellow-background]*Unknown (Granted access?)*
| 24 | 4 | | Handle count
| 28 | 4 | | Pointer count
4+| [yellow-background]*If handle descriptor size > 32?*
| 32 | 4 | | Handle object information RVA +
Contains an offset relative to the start of the file
| See section: [yellow-background]*TODO*
| 36 | 4 | 0 | [yellow-background]*Unknown (Reserved)*
|===

[yellow-background]*TODO: add text*

Object information RVA point to: MINIDUMP_HANDLE_OBJECT_INFORMATION
[yellow-background]*TODO add cross reference*

==== Handle object information
The handle object information (MINIDUMP_HANDLE_OBJECT_INFORMATION) is [yellow-background]*TODO*

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 4 | | Next handle object information RVA +
Contains an offset relative to the start of the file
| 4 | 4 | | Handle object information type
| 8 | 4 | | Handle object information data size
|===

[yellow-background]*TODO followed by data?*

==== Handle object information type
The handle object information type (MINIDUMP_HANDLE_OBJECT_INFORMATION_TYPE) is 
defined as:

[cols="1,1,5",options="header"]
|===
| Value | Identifier | Description
| 0 | MiniHandleObjectInformationNone | There is no object-specific information for this handle type.
| 1 | MiniThreadInformation1 | The information is specific to thread objects.
| 2 | MiniMutantInformation1 | The information is specific to mutant objects.
| 3 | MiniMutantInformation2 | The information is specific to mutant objects.
| 4 | MiniProcessInformation1 | The information is specific to process objects.
| 5 | MiniProcessInformation2 | The information is specific to process objects.
|===

=== [[exception_information_stream]]Exception information stream
The exception information stream (MINIDUMP_EXCEPTION_STREAM) is variable of 
size and consists of:

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 4 | | Thread identifier
| 4 | 4 | | [yellow-background]*Unknown (Alignment padding)*
| 8 | ... | | Exception record +
See action: [yellow-background]*TODO: add cross reference*
| ... | ... | | Thread context location descriptor +
See section: <<location_descriptor,Location descriptor>>
|===

The exception record (MINIDUMP_EXCEPTION) is variable of size and consists of:

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 4 | | Exception code
| 4 | 4 | | Exception flags
| 8 | 8 | | Exception record
| 16 | 8 | | Exception address
| 24 | 4 | | Number of exception information entries (or parameters) +
The maximum number of entries is 15 (EXCEPTION_MAXIMUM_PARAMETERS)
| 28 | 4 | | Alignment padding +
Reserved for cross-platform structure member alignment
| 32 | 8 x ... | | Array of exception information entries +
Where an exception information entry is an 64-bit integer
|===

[yellow-background]*TODO: add text*
....
EXCEPTION_RECORD:  00135da4 -- (.exr 0x135da4)
ExceptionAddress: 001363c0 (0x001363c0)
  ExceptionCode: c0000005 (Access violation)
 ExceptionFlags: 00000000
NumberParameters: 2
  Parameter[0]: 00000008
  Parameter[1]: 001363c0
Attempt to execute non-executable address 001363c0
....

==== Exception codes

[yellow-background]*TODO: migrate remaining documentation*

==== Exception flags

[cols="1,1,5",options="header"]
|===
| Value | Identifier | Description
| 0 | EXCEPTION_CONTINUABLE | A continuable exception
| 1 | EXCEPTION_NONCONTINUABLE (EH_NONCONTINUABLE) | A non-continuable exception
|===

=== [[extended_thread_information_stream]]Extended thread information stream
The extended thread information stream (MINIDUMP_THREAD_EX_LIST) is variable of 
size and consists of:

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 4 | | Number of threads
| 4 | ... | | Array of thread information entries
|===

The extended thread information entry (MINIDUMP_THREAD_EX) is [yellow-background]*TODO*

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 4 | | Thread identifier
| 4 | 4 | | Suspend count
| 8 | 4 | | Priority class
| 12 | 4 | | Priority
| 16 | 8 | | Thread Environment Block (TEB)
| 24 | ... | | Stack memory descriptor +
See section: [yellow-background]*TODO add cross reference*
| ... | ... | | Thread context location descriptor +
See section: <<location_descriptor,Location descriptor>>
| ... | ... | | Backing store memory descriptor +
See section: [yellow-background]*TODO add cross reference*
|===

=== [[function_table_information_stream]]Function table information stream
The function table information stream consists of:

* function table information header
* array of function table information descriptors

The function table information header (MINIDUMP_FUNCTION_TABLE_STREAM) is 24 
bytes of size and consists of:

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 4 | 24 | Header size +
Includes the header size value itself
| 4 | 4 | | Descriptor size
| 8 | 4 | | Native descriptor size
| 12 | 4 | | Function entry size
| 16 | 4 | | Number of function table descriptors
| 20 | 4 | | Alignment padding size
|===

==== Function table infomration descriptor
The function table information descriptor (MINIDUMP_FUNCTION_TABLE_DESCRIPTOR) 
is [yellow-background]*TODO*

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 8 | | [yellow-background]*Unknown (Minimum address)*
| 8 | 8 | | [yellow-background]*Unknown (Maximum address)*
| 16 | 8 | | [yellow-background]*Unknown (Base address)*
| 24 | 4 | | [yellow-background]*Unknown (Entry count)*
| 28 | 4 | | [yellow-background]*Unknown (Alignment padding size)*
|===

=== [[general_system_information_stream]]General system information stream

[yellow-background]*TODO: migrate remaining documentation*

=== [[memory_allocation_information_stream_32bit]]32-bit memory allocation information stream
The 32-bit memory allocation information stream (MINIDUMP_MEMORY_LIST) is 
variable of size and consists of:

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 4 | | Number of memory ranges
| 4 | ... | | Array of memory range descriptors
|===

=== 32-bit memory range descriptor
The 32-bit memory range descriptor (MINIDUMP_MEMORY_DESCRIPTOR) is [yellow-background]*TODO: add text*

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 8 | | [yellow-background]*Unknown (Start of memory range?)* +
[yellow-background]*Does this value contain a file offset or memory address?*
| 8 | ... | | [yellow-background]*Unknown (Memory location descriptor)* +
See section: <<location_descriptor,Location descriptor>>
|===

=== [[memory_allocation_information_stream_64bit]]64-bit memory allocation information stream
The 64-bit memory allocation information stream (MINIDUMP_MEMORY64_LIST) is 
variable of size and consists of:

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 8 | | Number of memory ranges
| 8 | 8 | | Base RVA +
Contains an offset relative to the start of the file
| 16 | ... | | Array of memory ranges
|===

=== 64-bit memory range descriptor
The 64-bit memory range descriptro (MINIDUMP_MEMORY_DESCRIPTOR64) is 16 bytes 
of size and consists of:

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 8 | | [yellow-background]*Unknown (Start of memory range?)* +
[yellow-background]*Does this value contain a file offset or memory address?*
| 8 | 16 | | Data size
|===

=== [[memory_region_description_information_stream]]Memory region description information stream
The memory region description information stream consists of:

* memory information header
* array of memory information entries

The memory information header (MINIDUMP_MEMORY_INFO_LIST) is 16 bytes of size 
and consists of:

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 4 | 16 | Header size +
Includes the header size value itself
| 4 | 4 | 48 | Entry size
| 8 | 8 | | Number of entries
|===

The memory information entry (MINIDUMP_MEMORY_INFO) is 48 bytes of size and 
consists of:

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 8 | | [yellow-background]*Unknown (Base address)*
| 8 | 8 | | [yellow-background]*Unknown (Allocation base)*
| 16 | 4 | | [yellow-background]*Unknown (Allocation protect)*
| 20 | 4 | | [yellow-background]*Unknown (Alignment padding)*
| 24 | 8 | | [yellow-background]*Unknown (Region size)*
| 32 | 4 | | [yellow-background]*Unknown (State)*
| 36 | 4 | | [yellow-background]*Unknown (Protect)*
| 40 | 4 | | [yellow-background]*Unknown (Type)*
| 44 | 4 | | [yellow-background]*Unknown (Alignment padding)*
|===

=== [[miscellaneous_information_stream]]Miscellaneous information stream
The miscellaneous information stream - version 1 (MINIDUMP_MISC_INFO) or the 
miscellaneous information stream - version 2 (MINIDUMP_MISC_INFO_2) are 
respectively 24 or 44 bytes of size and consist of:

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 4 | | Stream data size
| 4 | 4 | | Miscellaneous information flags +
See section: [yellow-background]*TODO add cross reference*
| 8 | 4 | | Process identifier (PID)
| 12 | 4 | | Process creation time +
Contains a POSIX timestamp
| 16 | 4 | | Process user time +
Contains a POSIX timestamp
| 20 | 4 | | Process kernel time +
Contains a POSIX timestamp
4+| [yellow-background]*If stream data size > 24?*
| 24 | 4 | | Processor maximum MHz
| 28 | 4 | | Processor current MHz
| 32 | 4 | | Processor MHz limit
| 36 | 4 | | Processor maximum idle state
| 40 | 4 | | Processor current idle state
|===

[yellow-background]*TODO what about additional data?*

....
00000100  e8 00 00 00 d7 00 00 00  b8 18 00 00 44 76 6d 50  |............DvmP| 
00000110  78 04 00 00 6e 04 00 00  c5 09 00 00 c5 09 00 00  |x...n...........| 
00000120  c5 09 00 00 03 00 00 00  01 00 00 00              |............. ..| 

00000120                                       10 20 00 00  |............. ..| 
00000130  0d 00 00 d0 00 00 00 00  01 00 00 00 b4 00 00 00  |................| 
00000140  45 00 2e 00 20 00 53 00  6f 00 75 00 74 00 68 00  |E... .S.o.u.t.h.| 
00000150  20 00 41 00 6d 00 65 00  72 00 69 00 63 00 61 00  | .A.m.e.r.i.c.a.| 
00000160  20 00 53 00 74 00 61 00  6e 00 64 00 61 00 72 00  | .S.t.a.n.d.a.r.| 
00000170  64 00 20 00 54 00 69 00  6d 00 65 00 00 00 00 00  |d. .T.i.m.e.....| 
00000180  00 00 02 00 06 00 04 00  17 00 3b 00 3b 00 e7 03  |..........;.;...| 
00000190  00 00 00 00 45 00 2e 00  20 00 53 00 6f 00 75 00  |....E... .S.o.u.| 
000001a0  74 00 68 00 20 00 41 00  6d 00 65 00 72 00 69 00  |t.h. .A.m.e.r.i.| 
000001b0  63 00 61 00 20 00 44 00  61 00 79 00 6c 00 69 00  |c.a. .D.a.y.l.i.| 
000001c0  67 00 68 00 74 00 20 00  54 00 69 00 6d 00 65 00  |g.h.t. .T.i.m.e.| 
000001d0  00 00 00 00 00 00 0a 00  06 00 03 00 17 00 3b 00  |..............;.| 
000001e0  3b 00 e7 03 c4 ff ff ff                           |;...............| 
....

==== Miscellaneous information flags

[cols="1,1,5",options="header"]
|===
| Value | Identifier | Description
| 0x00000001 | MINIDUMP_MISC1_PROCESS_ID | The process identifier (PID) value in the miscellaneous information stream is set
| 0x00000002 | MINIDUMP_MISC1_PROCESS_TIMES | The process creation time, process user time and process kernel time values in the miscellaneous information stream are set
| 0x00000004 | MINIDUMP_MISC1_PROCESSOR_POWER_INFO | The processor maximum MHz, processor current MHz, processor MHz limit, processor maximum idle state and processor current idle state values in the miscellaneous information stream are set
|===

=== [[module_information_stream]]Module information stream
The module information stream (MINIDUMP_MODULE_LIST) is variable of size and 
consists of:

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 4 | | Number of modules
| 4 | ... | | Array of module information entries
|===

The thread information entry (MINIDUMP_MODULE) is [yellow-background]*TODO: add text*

[yellow-background]*TODO: check the offset and sizes*

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 8 | | [yellow-background]*Unknown (Image base)*
| 8 | 4 | | Image size
| 12 | 4 | | Checksum +
[yellow-background]*TODO: determine which type of checksum and what data it checks*
| 16 | 4 | | Timestamp +
Contains a POSIX timestamp
| 20 | 4 | | Module name RVA +
Contains an offset relative to the start of the file
| 24 | 52 | | Version information +
PE/COFF fixed file version information +
Also see: `[LIBEXE]`
| 76 | [yellow-background]*8* | | CodeView record location descriptor +
See section: <<location_description,Location descriptor>> +
The location descriptor points to a PDB RSDS structure
| | [yellow-background]*8* | | Miscellaneous record location descriptor +
See section: <<location_description,Location descriptor>>
| | 8 | | [yellow-background]*Unknown (Reserved)*
| | 8 | | [yellow-background]*Unknown (Reserved)*
|===

=== [[operation_list_information_stream]]Operation list information stream
The operation list information stream consists of:

* operation list information header
* array of operation list information entries

The operation list information header (MINIDUMP_HANDLE_OPERATION_LIST) is 16 bytes of size and consists of:

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 4 | 16 | Header size +
Includes the header size value itself
| 4 | 4 | | Entry size
| 8 | 4 | | Number of entries
| 12 | 4 | | [yellow-background]*Unknown (reserved)*
|===

The operation list information entry (AVRF_HANDLE_OPERATION) is [yellow-background]*TODO*
....
typedef struct {
  ULONG64                    Handle;
  ULONG                      ProcessId;
  ULONG                      ThreadId;
  ULONG                      OperationType;
  ULONG                      Spare0;
  AVRF_BACKTRACE_INFORMATION BackTraceInformation;
} AVRF_HANDLE_OPERATION;
....

=== [[thread_information_stream]]Thread information stream
The thread information stream (MINIDUMP_THREAD_LIST) is variable of size and 
consists of:

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 4 | | Number of threads
| 4 | ... | | Array of thread information entries
|===

=== Thread information entry
The thread information entry (MINIDUMP_THREAD) is [yellow-background]*TODO: add text*

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 4 | | Thread identifier
| 4 | 4 | | Suspend count
| 8 | 4 | | Priority class
| 12 | 4 | | Priority
| 16 | 8 | | Thread Environment Block (TEB)
| 24 | ... | | Stack memory descriptor +
See section: [yellow-background]*TODO: add text*
| ... | ... | | Thread context location descriptor +
See section: <<locaton_descriptor,Location descriptor>>
|===

=== [[thread_state_information_stream]]Thread state information stream
The thread state information stream consists of:

* thread state information header
* array of thread state information entries

The thread state information header (MINIDUMP_THREAD_INFO_LIST) is 12 bytes of 
size and consists of:

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 4 | 12 | Header size +
Includes the header size value itself
| 4 | 4 | | Entry size
| 8 | 4 | | Number of entries
|===

The thread state information entry (MINIDUMP_THREAD_INFO) is [yellow-background]*TODO*

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 4 | | Thread identifier
| 4 | 4 | | [yellow-background]*Unknown (Dump flags)*
| 8 | 4 | | [yellow-background]*Unknown (Dump error)*
| 12 | 4 | | [yellow-background]*Unknown (Exit status)*
| 16 | 8 | | Creation time +
[yellow-background]*Contains a FILETIME?*
| 24 | 8 | | Exit time +
[yellow-background]*Contains a FILETIME?*
| 32 | 8 | | Kernel time +
[yellow-background]*Contains a FILETIME?*
| 40 | 8 | | User time +
[yellow-background]*Contains a FILETIME?*
| 48 | 8 | | [yellow-background]*Unknown (Start address)*
| 56 | 8 | | [yellow-background]*Unknown (Affinity)*
|===

=== [[unloaded_module_information_stream]]Unloaded module information stream
The unloaded module information stream consists of:

* unloaded module information header
* array of unloaded module information entries

The unloaded module information header (MINIDUMP_UNLOADED_MODULE_LIST) is 12 
bytes of size and consists of:

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 4 | 12 | Header size +
Includes the header size value itself
| 4 | 4 | | Entry size
| 8 | 4 | | Number of entries
|===

The unloaded module information entry (MINIDUMP_UNLOADED_MODULE) is [yellow-background]*TODO*

[cols="1,1,1,5",options="header"]
|===
| Offset | Size | Value | Description
| 0 | 8 | | [yellow-background]*Unknown (Image base)*
| 8 | 4 | | [yellow-background]*Unknown (Image size)*
| 12 | 4 | | [yellow-background]*Unknown (Checksum)* +
[yellow-background]*TODO: determine which type of checksum and what data it checks*
| 16 | 4 | | [yellow-background]*Unknown (Timestamp)* +
[yellow-background]*TODO: What does it signify?*
| 20 | 4 | | [yellow-background]*Unknown (Module name RVA)* +
[yellow-background]*Contains an offset relative to the start of the file*
|===

=== [[user_defined_stream]]User defined stream

[yellow-background]*TODO: add text (MINIDUMP_USER_STREAM)*

== Notes
....
dumpchk -v file.mdmp
....

:numbered!:
[appendix]
== References

`[LIBEXE]`

[cols="1,5",options="header"]
|===
| Title: | MZ, PE-COFF executable file format (EXE)
| Author(s): | Joachim Metz
| Date: | October 2011 
| URL: | [yellow-background]*TODO: add URL*
|===

`[MSDN]`

[cols="1,5",options="header"]
|===
| Title: | MINIDUMP_HEADER structure
| URL: | http://msdn.microsoft.com/en-us/library/windows/desktop/ms680378(v=vs.85).aspx
|===

`[REACTOS]`

[cols="1,5",options="header"]
|===
| Title: | compat.h
| URL: | http://doxygen.reactos.org/d5/db1/dll_2win32_2dbghelp_2compat_8h_source.html
|===

[appendix]
== GNU Free Documentation License
Version 1.3, 3 November 2008
Copyright © 2000, 2001, 2002, 2007, 2008 Free Software Foundation, Inc. 
<http://fsf.org/>

Everyone is permitted to copy and distribute verbatim copies of this license 
document, but changing it is not allowed.

=== 0. PREAMBLE
The purpose of this License is to make a manual, textbook, or other functional 
and useful document "free" in the sense of freedom: to assure everyone the 
effective freedom to copy and redistribute it, with or without modifying it, 
either commercially or noncommercially. Secondarily, this License preserves for 
the author and publisher a way to get credit for their work, while not being 
considered responsible for modifications made by others.

This License is a kind of "copyleft", which means that derivative works of the 
document must themselves be free in the same sense. It complements the GNU 
General Public License, which is a copyleft license designed for free software.

We have designed this License in order to use it for manuals for free software, 
because free software needs free documentation: a free program should come with 
manuals providing the same freedoms that the software does. But this License is 
not limited to software manuals; it can be used for any textual work, 
regardless of subject matter or whether it is published as a printed book. We 
recommend this License principally for works whose purpose is instruction or 
reference.

=== 1. APPLICABILITY AND DEFINITIONS
This License applies to any manual or other work, in any medium, that contains 
a notice placed by the copyright holder saying it can be distributed under the 
terms of this License. Such a notice grants a world-wide, royalty-free license, 
unlimited in duration, to use that work under the conditions stated herein. The 
"Document", below, refers to any such manual or work. Any member of the public 
is a licensee, and is addressed as "you". You accept the license if you copy, 
modify or distribute the work in a way requiring permission under copyright law.

A "Modified Version" of the Document means any work containing the Document or 
a portion of it, either copied verbatim, or with modifications and/or 
translated into another language.

A "Secondary Section" is a named appendix or a front-matter section of the 
Document that deals exclusively with the relationship of the publishers or 
authors of the Document to the Document's overall subject (or to related 
matters) and contains nothing that could fall directly within that overall 
subject. (Thus, if the Document is in part a textbook of mathematics, a 
Secondary Section may not explain any mathematics.) The relationship could be a 
matter of historical connection with the subject or with related matters, or of 
legal, commercial, philosophical, ethical or political position regarding them.

The "Invariant Sections" are certain Secondary Sections whose titles are 
designated, as being those of Invariant Sections, in the notice that says that 
the Document is released under this License. If a section does not fit the 
above definition of Secondary then it is not allowed to be designated as 
Invariant. The Document may contain zero Invariant Sections. If the Document 
does not identify any Invariant Sections then there are none.

The "Cover Texts" are certain short passages of text that are listed, as 
Front-Cover Texts or Back-Cover Texts, in the notice that says that the 
Document is released under this License. A Front-Cover Text may be at most 5 
words, and a Back-Cover Text may be at most 25 words.

A "Transparent" copy of the Document means a machine-readable copy, represented 
in a format whose specification is available to the general public, that is 
suitable for revising the document straightforwardly with generic text editors 
or (for images composed of pixels) generic paint programs or (for drawings) 
some widely available drawing editor, and that is suitable for input to text 
formatters or for automatic translation to a variety of formats suitable for 
input to text formatters. A copy made in an otherwise Transparent file format 
whose markup, or absence of markup, has been arranged to thwart or discourage 
subsequent modification by readers is not Transparent. An image format is not 
Transparent if used for any substantial amount of text. A copy that is not 
"Transparent" is called "Opaque".

Examples of suitable formats for Transparent copies include plain ASCII without 
markup, Texinfo input format, LaTeX input format, SGML or XML using a publicly 
available DTD, and standard-conforming simple HTML, PostScript or PDF designed 
for human modification. Examples of transparent image formats include PNG, XCF 
and JPG. Opaque formats include proprietary formats that can be read and edited 
only by proprietary word processors, SGML or XML for which the DTD and/or 
processing tools are not generally available, and the machine-generated HTML, 
PostScript or PDF produced by some word processors for output purposes only.

The "Title Page" means, for a printed book, the title page itself, plus such 
following pages as are needed to hold, legibly, the material this License 
requires to appear in the title page. For works in formats which do not have 
any title page as such, "Title Page" means the text near the most prominent 
appearance of the work's title, preceding the beginning of the body of the text.

The "publisher" means any person or entity that distributes copies of the 
Document to the public.

A section "Entitled XYZ" means a named subunit of the Document whose title 
either is precisely XYZ or contains XYZ in parentheses following text that 
translates XYZ in another language. (Here XYZ stands for a specific section 
name mentioned below, such as "Acknowledgements", "Dedications", 
"Endorsements", or "History".) To "Preserve the Title" of such a section when 
you modify the Document means that it remains a section "Entitled XYZ" 
according to this definition.

The Document may include Warranty Disclaimers next to the notice which states 
that this License applies to the Document. These Warranty Disclaimers are 
considered to be included by reference in this License, but only as regards 
disclaiming warranties: any other implication that these Warranty Disclaimers 
may have is void and has no effect on the meaning of this License.

=== 2. VERBATIM COPYING
You may copy and distribute the Document in any medium, either commercially or 
noncommercially, provided that this License, the copyright notices, and the 
license notice saying this License applies to the Document are reproduced in 
all copies, and that you add no other conditions whatsoever to those of this 
License. You may not use technical measures to obstruct or control the reading 
or further copying of the copies you make or distribute. However, you may 
accept compensation in exchange for copies. If you distribute a large enough 
number of copies you must also follow the conditions in section 3.

You may also lend copies, under the same conditions stated above, and you may 
publicly display copies.

=== 3. COPYING IN QUANTITY
If you publish printed copies (or copies in media that commonly have printed 
covers) of the Document, numbering more than 100, and the Document's license 
notice requires Cover Texts, you must enclose the copies in covers that carry, 
clearly and legibly, all these Cover Texts: Front-Cover Texts on the front 
cover, and Back-Cover Texts on the back cover. Both covers must also clearly 
and legibly identify you as the publisher of these copies. The front cover must 
present the full title with all words of the title equally prominent and 
visible. You may add other material on the covers in addition. Copying with 
changes limited to the covers, as long as they preserve the title of the 
Document and satisfy these conditions, can be treated as verbatim copying in 
other respects.

If the required texts for either cover are too voluminous to fit legibly, you 
should put the first ones listed (as many as fit reasonably) on the actual 
cover, and continue the rest onto adjacent pages.

If you publish or distribute Opaque copies of the Document numbering more than 
100, you must either include a machine-readable Transparent copy along with 
each Opaque copy, or state in or with each Opaque copy a computer-network 
location from which the general network-using public has access to download 
using public-standard network protocols a complete Transparent copy of the 
Document, free of added material. If you use the latter option, you must take 
reasonably prudent steps, when you begin distribution of Opaque copies in 
quantity, to ensure that this Transparent copy will remain thus accessible at 
the stated location until at least one year after the last time you distribute 
an Opaque copy (directly or through your agents or retailers) of that edition 
to the public.

It is requested, but not required, that you contact the authors of the Document 
well before redistributing any large number of copies, to give them a chance to 
provide you with an updated version of the Document.

=== 4. MODIFICATIONS
You may copy and distribute a Modified Version of the Document under the 
conditions of sections 2 and 3 above, provided that you release the Modified 
Version under precisely this License, with the Modified Version filling the 
role of the Document, thus licensing distribution and modification of the 
Modified Version to whoever possesses a copy of it. In addition, you must do 
these things in the Modified Version:

A. Use in the Title Page (and on the covers, if any) a title distinct from that 
of the Document, and from those of previous versions (which should, if there 
were any, be listed in the History section of the Document). You may use the 
same title as a previous version if the original publisher of that version 
gives permission. 

B. List on the Title Page, as authors, one or more persons or entities 
responsible for authorship of the modifications in the Modified Version, 
together with at least five of the principal authors of the Document (all of 
its principal authors, if it has fewer than five), unless they release you from 
this requirement. 

C. State on the Title page the name of the publisher of the Modified Version, 
as the publisher. 

D. Preserve all the copyright notices of the Document. 

E. Add an appropriate copyright notice for your modifications adjacent to the 
other copyright notices. 

F. Include, immediately after the copyright notices, a license notice giving 
the public permission to use the Modified Version under the terms of this 
License, in the form shown in the Addendum below. 

G. Preserve in that license notice the full lists of Invariant Sections and 
required Cover Texts given in the Document's license notice. 

H. Include an unaltered copy of this License. 

I. Preserve the section Entitled "History", Preserve its Title, and add to it 
an item stating at least the title, year, new authors, and publisher of the 
Modified Version as given on the Title Page. If there is no section Entitled 
"History" in the Document, create one stating the title, year, authors, and 
publisher of the Document as given on its Title Page, then add an item 
describing the Modified Version as stated in the previous sentence. 

J. Preserve the network location, if any, given in the Document for public 
access to a Transparent copy of the Document, and likewise the network 
locations given in the Document for previous versions it was based on. These 
may be placed in the "History" section. You may omit a network location for a 
work that was published at least four years before the Document itself, or if 
the original publisher of the version it refers to gives permission. 

K. For any section Entitled "Acknowledgements" or "Dedications", Preserve the 
Title of the section, and preserve in the section all the substance and tone of 
each of the contributor acknowledgements and/or dedications given therein. 

L. Preserve all the Invariant Sections of the Document, unaltered in their text 
and in their titles. Section numbers or the equivalent are not considered part 
of the section titles. 

M. Delete any section Entitled "Endorsements". Such a section may not be 
included in the Modified Version. 

N. Do not retitle any existing section to be Entitled "Endorsements" or to 
conflict in title with any Invariant Section. 

O. Preserve any Warranty Disclaimers. 

If the Modified Version includes new front-matter sections or appendices that 
qualify as Secondary Sections and contain no material copied from the Document, 
you may at your option designate some or all of these sections as invariant. To 
do this, add their titles to the list of Invariant Sections in the Modified 
Version's license notice. These titles must be distinct from any other section 
titles.

You may add a section Entitled "Endorsements", provided it contains nothing but 
endorsements of your Modified Version by various parties—for example, 
statements of peer review or that the text has been approved by an organization 
as the authoritative definition of a standard.

You may add a passage of up to five words as a Front-Cover Text, and a passage 
of up to 25 words as a Back-Cover Text, to the end of the list of Cover Texts 
in the Modified Version. Only one passage of Front-Cover Text and one of 
Back-Cover Text may be added by (or through arrangements made by) any one 
entity. If the Document already includes a cover text for the same cover, 
previously added by you or by arrangement made by the same entity you are 
acting on behalf of, you may not add another; but you may replace the old one, 
on explicit permission from the previous publisher that added the old one.

The author(s) and publisher(s) of the Document do not by this License give 
permission to use their names for publicity for or to assert or imply 
endorsement of any Modified Version.

=== 5. COMBINING DOCUMENTS
You may combine the Document with other documents released under this License, 
under the terms defined in section 4 above for modified versions, provided that 
you include in the combination all of the Invariant Sections of all of the 
original documents, unmodified, and list them all as Invariant Sections of your 
combined work in its license notice, and that you preserve all their Warranty 
Disclaimers.

The combined work need only contain one copy of this License, and multiple 
identical Invariant Sections may be replaced with a single copy. If there are 
multiple Invariant Sections with the same name but different contents, make the 
title of each such section unique by adding at the end of it, in parentheses, 
the name of the original author or publisher of that section if known, or else 
a unique number. Make the same adjustment to the section titles in the list of 
Invariant Sections in the license notice of the combined work.

In the combination, you must combine any sections Entitled "History" in the 
various original documents, forming one section Entitled "History"; likewise 
combine any sections Entitled "Acknowledgements", and any sections Entitled 
"Dedications". You must delete all sections Entitled "Endorsements".

=== 6. COLLECTIONS OF DOCUMENTS
You may make a collection consisting of the Document and other documents 
released under this License, and replace the individual copies of this License 
in the various documents with a single copy that is included in the collection, 
provided that you follow the rules of this License for verbatim copying of each 
of the documents in all other respects.

You may extract a single document from such a collection, and distribute it 
individually under this License, provided you insert a copy of this License 
into the extracted document, and follow this License in all other respects 
regarding verbatim copying of that document.

=== 7. AGGREGATION WITH INDEPENDENT WORKS
A compilation of the Document or its derivatives with other separate and 
independent documents or works, in or on a volume of a storage or distribution 
medium, is called an "aggregate" if the copyright resulting from the 
compilation is not used to limit the legal rights of the compilation's users 
beyond what the individual works permit. When the Document is included in an 
aggregate, this License does not apply to the other works in the aggregate 
which are not themselves derivative works of the Document.

If the Cover Text requirement of section 3 is applicable to these copies of the 
Document, then if the Document is less than one half of the entire aggregate, 
the Document's Cover Texts may be placed on covers that bracket the Document 
within the aggregate, or the electronic equivalent of covers if the Document is 
in electronic form. Otherwise they must appear on printed covers that bracket 
the whole aggregate.

=== 8. TRANSLATION
Translation is considered a kind of modification, so you may distribute 
translations of the Document under the terms of section 4. Replacing Invariant 
Sections with translations requires special permission from their copyright 
holders, but you may include translations of some or all Invariant Sections in 
addition to the original versions of these Invariant Sections. You may include 
a translation of this License, and all the license notices in the Document, and 
any Warranty Disclaimers, provided that you also include the original English 
version of this License and the original versions of those notices and 
disclaimers. In case of a disagreement between the translation and the original 
version of this License or a notice or disclaimer, the original version will 
prevail.

If a section in the Document is Entitled "Acknowledgements", "Dedications", or 
"History", the requirement (section 4) to Preserve its Title (section 1) will 
typically require changing the actual title.

=== 9. TERMINATION
You may not copy, modify, sublicense, or distribute the Document except as 
expressly provided under this License. Any attempt otherwise to copy, modify, 
sublicense, or distribute it is void, and will automatically terminate your 
rights under this License.

However, if you cease all violation of this License, then your license from a 
particular copyright holder is reinstated (a) provisionally, unless and until 
the copyright holder explicitly and finally terminates your license, and (b) 
permanently, if the copyright holder fails to notify you of the violation by 
some reasonable means prior to 60 days after the cessation.

Moreover, your license from a particular copyright holder is reinstated 
permanently if the copyright holder notifies you of the violation by some 
reasonable means, this is the first time you have received notice of violation 
of this License (for any work) from that copyright holder, and you cure the 
violation prior to 30 days after your receipt of the notice.

Termination of your rights under this section does not terminate the licenses 
of parties who have received copies or rights from you under this License. If 
your rights have been terminated and not permanently reinstated, receipt of a 
copy of some or all of the same material does not give you any rights to use it.

=== 10. FUTURE REVISIONS OF THIS LICENSE
The Free Software Foundation may publish new, revised versions of the GNU Free 
Documentation License from time to time. Such new versions will be similar in 
spirit to the present version, but may differ in detail to address new problems 
or concerns. See http://www.gnu.org/copyleft/.

Each version of the License is given a distinguishing version number. If the 
Document specifies that a particular numbered version of this License "or any 
later version" applies to it, you have the option of following the terms and 
conditions either of that specified version or of any later version that has 
been published (not as a draft) by the Free Software Foundation. If the 
Document does not specify a version number of this License, you may choose any 
version ever published (not as a draft) by the Free Software Foundation. If the 
Document specifies that a proxy can decide which future versions of this 
License can be used, that proxy's public statement of acceptance of a version 
permanently authorizes you to choose that version for the Document.

=== 11. RELICENSING
"Massive Multiauthor Collaboration Site" (or "MMC Site") means any World Wide 
Web server that publishes copyrightable works and also provides prominent 
facilities for anybody to edit those works. A public wiki that anybody can edit 
is an example of such a server. A "Massive Multiauthor Collaboration" (or 
"MMC") contained in the site means any set of copyrightable works thus 
published on the MMC site.

"CC-BY-SA" means the Creative Commons Attribution-Share Alike 3.0 license 
published by Creative Commons Corporation, a not-for-profit corporation with a 
principal place of business in San Francisco, California, as well as future 
copyleft versions of that license published by that same organization.

"Incorporate" means to publish or republish a Document, in whole or in part, as 
part of another Document.

An MMC is "eligible for relicensing" if it is licensed under this License, and 
if all works that were first published under this License somewhere other than 
this MMC, and subsequently incorporated in whole or in part into the MMC, (1) 
had no cover texts or invariant sections, and (2) were thus incorporated prior 
to November 1, 2008.

The operator of an MMC Site may republish an MMC contained in the site under 
CC-BY-SA on the same site at any time before August 1, 2009, provided the MMC 
is eligible for relicensing.

